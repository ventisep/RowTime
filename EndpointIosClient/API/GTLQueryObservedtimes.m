/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2016 Google Inc.
 */

//
//  GTLQueryObservedtimes.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   observedtimes/v1
// Description:
//   ObservedTimes API v1. This API allows the GET method to get a collection of
//   observed times since the last time the user asked for a list and a POST
//   method to record new times
// Classes:
//   GTLQueryObservedtimes (5 custom class methods, 4 custom properties)

#import "GTLQueryObservedtimes.h"

#import "GTLObservedtimesRowTimePackageClockSyncReply.h"
#import "GTLObservedtimesRowTimePackageClockSyncRequest.h"
#import "GTLObservedtimesRowTimePackageCrewList.h"
#import "GTLObservedtimesRowTimePackageEventList.h"
#import "GTLObservedtimesRowTimePackageObservedTime.h"
#import "GTLObservedtimesRowTimePackageObservedTimeList.h"

@implementation GTLQueryObservedtimes

@dynamic eventId, fields, lastTimestamp, searchString;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map = @{
    @"eventId" : @"event_id",
    @"lastTimestamp" : @"last_timestamp",
    @"searchString" : @"search_string"
  };
  return map;
}

#pragma mark - "clock" methods
// These create a GTLQueryObservedtimes object.

+ (instancetype)queryForClockClockcheckWithObject:(GTLObservedtimesRowTimePackageClockSyncRequest *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"observedtimes.clock.clockcheck";
  GTLQueryObservedtimes *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLObservedtimesRowTimePackageClockSyncReply class];
  return query;
}

#pragma mark - "crew" methods
// These create a GTLQueryObservedtimes object.

+ (instancetype)queryForCrewList {
  NSString *methodName = @"observedtimes.crew.list";
  GTLQueryObservedtimes *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLObservedtimesRowTimePackageCrewList class];
  return query;
}

#pragma mark - "event" methods
// These create a GTLQueryObservedtimes object.

+ (instancetype)queryForEventList {
  NSString *methodName = @"observedtimes.event.list";
  GTLQueryObservedtimes *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLObservedtimesRowTimePackageEventList class];
  return query;
}

#pragma mark - "times" methods
// These create a GTLQueryObservedtimes object.

+ (instancetype)queryForTimesListtimes {
  NSString *methodName = @"observedtimes.times.listtimes";
  GTLQueryObservedtimes *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLObservedtimesRowTimePackageObservedTimeList class];
  return query;
}

+ (instancetype)queryForTimesTimecreateWithObject:(GTLObservedtimesRowTimePackageObservedTime *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"observedtimes.times.timecreate";
  GTLQueryObservedtimes *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLObservedtimesRowTimePackageObservedTime class];
  return query;
}

@end
